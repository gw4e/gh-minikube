apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1  # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend-container
          image: dev.local/app-backend-api:v1  # Use the name of your Docker image
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3001
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3001
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
          env:
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: DATABASE_USER
            - name: DATABASE_PWD
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: DATABASE_PWD
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: DATABASE_HOST
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: DATABASE_NAME
          ports:
            - containerPort: 3001  # Adjust the port as needed
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend  # Match pods with the label "app: backend"
  ports:
    - name: http
      protocol: TCP
      port: 3001   # Port that the service should listen on
      targetPort: 3001  # Port that the service should forward traffic to
  type: ClusterIP  # This creates a ClusterIP service
